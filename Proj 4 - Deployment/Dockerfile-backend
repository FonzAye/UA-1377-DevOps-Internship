# Stage 1: Build the application using Gradle
FROM gradle:7-jdk11 AS build

WORKDIR /app

# Copy Gradle and configuration files
COPY build.gradle gradlew liquibase.gradle pre-commit.gradle settings.gradle system.properties ./

# Copy application source and configuration
COPY src/ src/
COPY config/ config/

# Build the WAR file
RUN gradle --no-daemon war

# Stage 2: Set up Tomcat server and deploy the application
FROM tomcat:9.0.93-jdk11 AS tomcat

# Install PostgreSQL client
RUN apt-get update && \
    apt-get install -y --no-install-recommends postgresql-client && \
    rm -rf /var/lib/apt/lists/*

# Deploy the WAR file to Tomcat
COPY --from=build /app/build/libs/*.war /usr/local/tomcat/webapps/ROOT.war

# Copy scripts and backup files
COPY scripts/ /scripts/
COPY backup/ /backup/

# Make all script files executable
RUN chmod +x /scripts/*.sh

# Expose the default Tomcat port
EXPOSE 8080

# Set the entrypoint script
ENTRYPOINT ["/scripts/entrypoint.sh"]

# Start Tomcat server
CMD ["catalina.sh", "run"]

