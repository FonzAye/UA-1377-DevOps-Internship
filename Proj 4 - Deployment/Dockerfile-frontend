# Stage 1: Build stage - creates optimized production build
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package definition files first (to leverage Docker cache)
COPY frontend/package.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application source code
COPY frontend/ .

# Build the production-ready app
RUN npm run build

# Stage 2: Production stage - serve built static files using nginx
FROM nginx:alpine

# Copy built files from the builder stage to nginx's default public directory
COPY --from=builder /app/build /usr/share/nginx/html

# Overwrite default nginx config to serve on port 3000 and support SPA routing
RUN echo 'server { \
    listen 3000; \
    location / { \
        root /usr/share/nginx/html; \
        index index.html index.htm; \
        try_files $uri $uri/ /index.html; \
    } \
}' > /etc/nginx/conf.d/default.conf

# Expose the custom port
EXPOSE 3000

# Start nginx in the foreground
CMD ["nginx", "-g", "daemon off;"]

