version: '3.8'

services:
  # PostgreSQL database service
  postgres:
    image: postgres:13
    container_name: postgres
    env_file:
      - env/.env  # Load environment variables from file
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-database}
    ports:
      - "5432:5432"  # Expose PostgreSQL port to host

  # Redis service
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"  # Expose Redis port to host

  # MongoDB service
  mongo:
    image: mongo:8
    container_name: mongo
    ports:
      - "27017:27017"  # Expose MongoDB port to host

  # Backend application service
  backend:
    build:
      context: ./  # Build from the current directory
      dockerfile: Dockerfile-backend  # Specific Dockerfile for backend
    container_name: backend
    restart: always  # Restart on failure
    depends_on:
      - postgres
      - redis
    env_file:
      - env/.env
    environment:
      # Database settings
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-database}
      DB_USER: ${DB_USER:-user}
      DB_PASSWORD: ${DB_PASSWORD:-password}

      # Redis settings
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}

      # MongoDB settings
      MONGODB_NAME: ${MONGODB_NAME:-schedules}
      MONGODB_CLUSTER: ${MONGODB_CLUSTER:-mongo}
    ports:
      - "8080:8080"  # Expose backend port to host

  # Frontend application service
  frontend:
    build:
      context: ./  # Build from the current directory
      dockerfile: Dockerfile-frontend  # Specific Dockerfile for frontend
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"  # Expose frontend port to host

